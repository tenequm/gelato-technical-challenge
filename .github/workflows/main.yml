name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  init:
    name: Initialise global variables
    runs-on: ubuntu-latest
    outputs:
      GLOBAL_VERSION: ${{ steps.set_ver.outputs.GLOBAL_VERSION }}
    steps:
      - name: Set global version
        id: set_ver
        run: echo "::set-output name=GLOBAL_VERSION::${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}"

  trunk-lint:
    name: Lint repository with trunk.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Trunk Check
        uses: trunk-io/trunk-action@v1

  helm-validate:
    name: Validate Helm Chart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: yokawasa/action-setup-kube-tools@v0.8.2
      - name: Validate Helm Chart
        run: |
          cd ops/helm/gelato-server-chart
          helm lint .
          helm template . | kubeval --strict -v 1.22.9 -s https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master --ignore-missing-schemas

  build:
    needs: [init]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.1.0
        with:
          context: app
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ needs.init.outputs.GLOBAL_VERSION }}

  deploy:
    needs: [helm-validate, trunk-lint, init, build]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'eu-west-3'
    steps:
      - uses: actions/checkout@v3

      - name: Create a GitHub Deployment
        uses: bobheadxi/deployments@v0.6.1
        id: deployment
        with:
          step: start
          token: ${{ github.token }}
          env: dev
          ref: ${{ github.ref }}
          transient: 'false'

      - name: Vals Binary Installer
        uses: jkroepke/setup-vals@v1

      - name: Auth to EKS cluster
        run: aws eks update-kubeconfig --name tenequm-sc-eks

      - name: Deploy Helm release
        run: |
          helm plugin install https://github.com/jkroepke/helm-secrets --version v3.12.0
          helm secrets -d vals upgrade -i gelato-server ops/helm/gelato-server-chart \
            -n dev --create-namespace --wait \
            -f ops/helm/gelato-server-chart/values-dev.yaml \
            --set image.tag=${{ needs.init.outputs.GLOBAL_VERSION }}

      - name: Update the GitHub Deployment status
        uses: bobheadxi/deployments@v0.6.1
        if: always()
        with:
          step: finish
          token: ${{ github.token }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: "https://dev.pro-motion.com.ua"

  promote_to_prod:
    needs: [init, deploy]
    runs-on: ubuntu-latest
    environment: prod
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'eu-west-3'
    steps:
      - uses: actions/checkout@v3
      - name: Create a GitHub Deployment
        uses: bobheadxi/deployments@v0.6.1
        id: deployment
        with:
          step: start
          token: ${{ github.token }}
          env: prod
          ref: ${{ github.ref }}
          transient: 'false'

      - name: Vals Binary Installer
        uses: jkroepke/setup-vals@v1

      - name: Auth to EKS cluster
        run: aws eks update-kubeconfig --name tenequm-sc-eks

      - name: Deploy Helm release
        run: |
          helm plugin install https://github.com/jkroepke/helm-secrets --version v3.12.0
          for f in ops/helm/gelato-server-chart/values-prod-* ; do
          echo "Processing $f"
            helm secrets -d vals upgrade -i gelato-server ops/helm/gelato-server-chart \
              -n prod --create-namespace --wait -f $f \
              --set image.tag=${{ needs.init.outputs.GLOBAL_VERSION }}
          done

      - name: Update the GitHub Deployment status
        uses: bobheadxi/deployments@v0.6.1
        if: always()
        with:
          step: finish
          token: ${{ github.token }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: "https://prod.pro-motion.com.ua"
